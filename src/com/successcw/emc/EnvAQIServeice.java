package com.successcw.emc;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.1
 * 2013-01-08T13:47:17.436+08:00
 * Generated source version: 2.7.1
 * 
 */
@WebServiceClient(name = "EnvAQIServeice", 
                  wsdlLocation = "http://113.108.142.147:20035/EMCEnvAQIServeice/EnvAQIServeice.svc?wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class EnvAQIServeice extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "EnvAQIServeice");
    public final static QName BasicHttpBindingIEnvAQIServeice = new QName("http://tempuri.org/", "BasicHttpBinding_IEnvAQIServeice");
    static {
        URL url = null;
        try {
            url = new URL("http://113.108.142.147:20035/EMCEnvAQIServeice/EnvAQIServeice.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(EnvAQIServeice.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://113.108.142.147:20035/EMCEnvAQIServeice/EnvAQIServeice.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public EnvAQIServeice(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EnvAQIServeice(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EnvAQIServeice() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns IEnvAQIServeice
     */
    @WebEndpoint(name = "BasicHttpBinding_IEnvAQIServeice")
    public IEnvAQIServeice getBasicHttpBindingIEnvAQIServeice() {
        return super.getPort(BasicHttpBindingIEnvAQIServeice, IEnvAQIServeice.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IEnvAQIServeice
     */
    @WebEndpoint(name = "BasicHttpBinding_IEnvAQIServeice")
    public IEnvAQIServeice getBasicHttpBindingIEnvAQIServeice(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIEnvAQIServeice, IEnvAQIServeice.class, features);
    }

}
